import Head from 'next/head';
import { MongoClient } from 'mongodb';
import MeetupList from '../components/meetups/MeetupList.js';

/*
const DUMMY_MEETUPS = [
    {
        id: 'm1',
        title: 'Meetup Title 1',
        image: 'https://img2.oastatic.com/img2/86691158/max/variant.jpg',
        address: 'Some address 1',
        description: 'Meetup description 1',
    },
    {
        id: 'm2',
        title: 'Meetup Title 2',
        image: 'https://img2.oastatic.com/img2/86691158/max/variant.jpg',
        address: 'Some address 2',
        description: 'Meetup description 2',
    }
];
*/

const HomePage = (props) => {
    return (
        <>
            <Head>
                <title>React Meetups</title>
                <meta name='description' content='Browse a huge list of highly active React meetups!' />
            </Head>
            <MeetupList meetups={props.meetups} />
        </>
    );
}


// Static generation: only works on components of the pages/ directory. This functions executes during the prerendering
// process on the production build, means that the generated html code are in the source code, is not generated by js. 
// Allows async. Two options: getServerSideProps and getStaticProps

/*
// This is when you need to update the data on each request of the website. Only use if you need access to the req & res 
// to validate some authentication for example, or if the data really change every second, otherwhise its better to use 
// getStaticProps and makes the website faster 
export async function getServerSideProps(context) {
    const req = context.req;
    const res = context.res;

    // Any code here is running on the server side, never on the client side

    // Fetch data

    return {
        props: {
            meetups: DUMMY_MEETUPS
        }
    }
}
*/


// This allows to recive all necessary data before the components render, to avoid waiting to the fetching data. This
// way, the html of the MeetupList => MeetupItem is now available in the html base provided by the server
export async function getStaticProps() {
    // Any code here is running on the server side, never on the client side

    // Fetching data
    const client = await MongoClient.connect('mongodb+srv://adriangonzalezmeda:WRWvjMSiNy4oe9PQ@cluster0.gl87o.mongodb.net/meetups?retryWrites=true&w=majority&appName=Cluster0');
    const db = client.db();
    const meetupsCollection = db.collection('meetups');
    const meetups = await meetupsCollection.find().toArray();
    client.close();

    return {
        props: {
            meetups: meetups.map(meetup => ({
                title: meetup.title,
                address: meetup.address,
                image: meetup.image,
                id: meetup._id.toString() // Autogenerated mongodb id is not a string, so you cant use as a key in loops
            }))
        },
        revalidate: 1 // incremental static generation: this page will regenerated each second, so the pregenerated 
        // page ensure that have the updated data after the deployment
    };
}

export default HomePage
